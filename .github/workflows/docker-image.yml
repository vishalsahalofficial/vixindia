#name: Docker Image CI
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#
#jobs:
#
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Build the Docker image
#      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)



.gitlab_runner_tag: &gitlab_runner_tag
  tags:
    - backend-docker

image: docker.phonepe.com:5000/pp-maven:3.8.4-openjdk-17

.only_merge_requests: &only_merge_requests
  only:
    - merge_requests
    - web

stages:
  - build
  - pre_merge_checks
  - deploy
  - post_merge_checks
  - release

build_package:
  stage: build
  <<: *only_merge_requests
  <<: *gitlab_runner_tag
  script:
    - mvn clean package -U -DskipTests=true
  allow_failure: false

stage_deploy:
  stage: build
  <<: *only_merge_requests
  <<: *gitlab_runner_tag
  only:
    refs:
      - stage
  script:
    - mvn deploy -U -DskipTests=true -Dmaven.javadoc.skip=true -Pdocker
  when: manual
  allow_failure: false

merge_ready:
  stage: pre_merge_checks
  <<: *only_merge_requests
  <<: *gitlab_runner_tag
  script:
    - mvn clean install -U -Pquality_check

deploy_snapshot:
  stage: deploy
  <<: *gitlab_runner_tag
  only:
    - web
  script:
    - mvn deploy -U -Pdocker
  when: manual
  allow_failure: false

post_merge:
  stage: post_merge_checks
  <<: *gitlab_runner_tag
  script:
    - mvn clean install -U -Pquality_check
  only:
    refs:
      - develop

release:
  <<: *gitlab_runner_tag
  stage: release
  script:
    - git remote set-url origin "git@gitlab.phonepe.com:${CI_PROJECT_PATH}.git"
    - git checkout master
    - git checkout develop
    - mvn -U -Pdocker jgitflow:release-start jgitflow:release-finish
    - git push --all
    - git push --tags origin
  when: manual
  only:
    refs:
      - develop

